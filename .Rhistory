d2 <- as.Date("1969-01-01")
unclass(d2)
t1 <- Sys.time()
t1
class(t1)
unclass(t1)
t2 <- as.POSIXlt(Sys.time(t1))
t2 <- as.POSIXlt(Sys.time(t1))
?Sys.time
?as.POSIXlt
t2 <- as.POSIXlt(Sys.time())
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
weekdays(d1)
months(t1)
quarter(t2)
quarters(t2)
t3 <- "October 17, 1986 08:24"
?strptime
t4 <-strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
Sys.time() > t1
Sys.time() - t1
difftime(Sys.time(),t1,units='days')
add2 <- function(x, y) {
x+y
}
add2(3,4)
?array
?gl
x <- 1:10
if(x>5) {}
x <- 1:10
if(x>5) {
x <- 0
}
x <- 1:10
if(x>5) {
x <- 0
}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
library(iris)
data(iris)
library(datasets)
data(iris)
iris
?iris
sapply(iris,mean)
lapply(iris, mean)
library(datasets)
data(mtcars)
mtcars
?mtcars
head(mtcars)
split(mtcars, mtcars$cyl)
mean(mtcars$mpg, mtcars$cyl)
tapply(mtcars$cyl, mtcars$mpg, mean)
with(mtcars, tapply(mpq, cyl, mean))
with(mtcars, tapply(mpg, cyl, mean))
?with
tapply(mpg, cyl, mean)
q4 <- with(mtcars, tapply(mpg, cyl, mean))
q4[,1]
q4[1]
q4[1]-q4[3]
?abs
abs(q4[1]-q4[3])
debug(ls
debug(ls)
debug(ls)
ls
ls
?debug
5+5
2600*1.21
k
skip()
?debug
library(swirl)
swirl()
install_from_swirl("Open intro")
swirl()
install_from_swirl("Open Intro")
swirl()
install_from_swirl("Getting and Cleaning Data")
library(swirl)
install_from_swirl("Getting and Cleaning Data")
swril()
swirl()
read.csv(path2csv, stringAsFactor= FALSE)
?read.csv
mydf <- read.csv(path2csv, stringAsFactors= FALSE)
path2csv
mydf <- read.csv(path2csv, stringAsFactors = FALSE)
mydf <- read.csv(path2csv, stringsAsFactors = FALSE)
dim(mydf)
head(mydf)
library(dplyr)
packageVersion("dplyr")
cran <- tbl_df(mydf)
rm("mydf")
cran
?manip
select(cran, ip_id, package, country)
5:20
select(cran r_arch:country)
select(cran, r_arch:country)
select(cran, country:r_arch)
cran
select(cran, -time)
-5:20
select(cran, -(X,size))
-(5:20)
select(cran, -(X,size))
select(cran, -(X:size))
filter(cran, package == "swirl")
filter(cran, r_version == "3.1.1", country =="US")
?Comparison
filter(cran, r_version >= "3.0.2", country =="IN")
filter(cran, r_version <= "3.0.2", country =="IN")
filter(cran, r_version <= "3.0.2" | country =="IN")
swirl
library(swirl)
swirl()
5 + 7
x <+ 5 +7
x <- 5 +7
x
y <- x - 3
y
z <- c(1.1, 9, 3.14)
?c
z
c(z, 555, )
c(z, 555, z)
z*2 + 100
my_sqrt <- sqrt(z-1)
my_sqrt
my_div <- z/my_sqrt
my_div
c(1,2,3,4) + c(0,10)
c(1,2,3,4) + c(0,10,100)
z*2 + 1000
my_div
library swirl()
library(swirl)
swirl()
1:20
pi:10
15:1
?':'
seq(1,20)
seq(0,10, by=0.5)
seq(5,10, lenght=30)
seq(5,10, length=30)
my_seq <- seq(5, 10, length=30)
length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0, times = 40)
rep(c(0,1,2), times = 10)
rep(c(0,1,2), each = 10)
num_vect <- c(0.5,55,-10,6)
tf <- num_vect < 1
tf
num_vect >= 6
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse = " ")
c(my_char, "Roger")
my_name <- c(my_char, "Roger")
my_name
paste(my_name, collapse = " ")
paste("Hello", "world!", sep = " ")
paste(1:3,c("X","Y","Z"), sep = "")
paste(LETTERS, 1:4, sep = "-")
x <- c(44, NA, 5, NA)
x*3
y <- rnorm(1000)
z <- rep(NA, 1000)
my_data <- sample(c(y, z), 100)
is.na(my_data)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0/0
Inf - Inf
x
x[1_10]
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x > 0]
x[c(3,5,7)]
x[0]
x[3000]
x[-2,-10]
x[-c(2,10)]
x[c(-2,-10)]
x[-c(2,10)]
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
vect2 <- c(11,2,NA)
names(vect2) <- c("foo", "bar", "norf")
identical(vect, vect2)
vect["bar"]
vect[c("foo","bar")]
install.packages(KernSmooth)
install.packages("KernSmooth")
library(KernSmooth)
count <- 0
while(count < 10) {}
count <- 0 while(count < 10) {
print (count)
count <- count +1
}
count <- 0
while(count < 10) {
print (count)
count <- count +1
}
z <- 5
while(z>= 3 && z <= 10) {
print(z)
coint <- rbinom(1,1,0.5)
if(coin = 1) {
z <- z+1
} else {
z <- z-1
}
z <- 5
while(z>= 3 && z <= 10) {
print(z)
coint <- rbinom(1,1,0.5)
if(coin = 1) {
z <- z+1
} else {
z <- z-1
}
}
z <- 5
while(z>= 3 && z <= 10) {
print(z)
coint <- rbinom(1,1,0.5)
if(coin = 1) { ## random
z <- z+1
} else {
z <- z-1
}
}
z <- 5
while(z>= 3 && z <= 10) {
print(z)
coint <- rbinom(1,1,0.5)
if(coin == 1) { ## random
z <- z+1
} else {
z <- z-1
}
}
z <- 5
while(z>= 3 && z <= 10) {
print(z)
coint <- rbinom(1,1,0.5)
if(coin == 1) { ## random walk
z <- z+1
} else {
z <- z-1
}
}
z <- 5
while(z>= 3 && z <= 10) {
print(z)
coint <- rbinom(1,1,0.5)
if(coin == 1) { ## random walk
z <- z + 1
} else {
z <- z - 1
}
}
z <- 5
while(z>= 3 && z <= 10) {
print(z)
coin <- rbinom(1,1,0.5)
if(coin == 1) { ## random walk
z <- z + 1
} else {
z <- z - 1
}
}
mydata <- rnorm(100)
sd(mydata)
sd(x = mydata)
sd(x = mydata, na.rm = FALSE)
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
f(3)
z<-10
f(3)
getwd
getwd()
docs <- read.table("specdata")
list.files("specdata")
all <- read.csv("specdata")
files <- list.files("specdata")
all <- read.csv(files)
all <- read.csv("files")
rbind?
?rbind
??rbind
library(swirl)
swirl()
mydf <- read.csv(path2csv, stringsAsFactors = FALSE)
dim(mydf)
head(mydf)
library(dplyr)
packageVersion("dplyr")
cran <- tbl_df(mydf)
rm("mydf")
tbl_df
cran
?manip
select(cran, ip_id, package, country)
?sprintf
files <- list.files("specdata")
files
?rep
polmean <- rep(0,lenght(files))
polmean <- rep(0,length(files))
polmean
?which
pollutantmean <- function(directory, pollutant, id)  {
files_full <- list.files("specdata", full.names=TRUE)
data <- data.frame()
for (i in 1:332) {
data <- rbind(data, read.csv(files_full[i]))
}
data_subset <- data[which(data[,"ID"] == id),]
mean(data_subset[,pollutant], na.rm=TRUE)
}
pollutantmean("specdata","sulfate", 1:10)
pollutantmean("specdata","sulfate", 1:10)
?if
?if
if()
pollutantmean <- function(directory, pollutant, id)  {
files_full <- list.files("specdata", full.names=TRUE)
data <- data.frame()
for (i in 1:332) {
data <- rbind(data, read.csv(files_full[i]))
}
data_subset <- data[which(data[,"ID"] == id),]
if(pollutant=="nitrate") {
mean(data_subset[,"nitrate"], na.rm=TRUE)
} else {
mean(data_subset[,"sulfate"], na.rm=TRUE)
}
}
pollutantmean("specdata","nitrate",1:10)
pollutantmean("specdata","sulfate",1:10)
pollutantmean("specdata","sulfate", 1:10)
?round
6.2345
n <- 6.2345
round(n, 3)
matrix(5,6)
matrix(1:5*6,5,6)
m <- matrix(1:5*6,5,6)
pollutantmean <- function(directory, pollutant, id)  {
files_full <- list.files("specdata", full.names=TRUE)
data <- data.frame()
for (i in 1:332) {
data <- rbind(data, read.csv(files_full[i]))
}
data_subset <- subset(data, ID = id)
if(pollutant=="nitrate") {
ans <- mean(data_subset[,"nitrate"], na.rm=TRUE)
} else {
ans <-mean(data_subset[,"sulfate"], na.rm=TRUE)
}
round(ans,4)
}
pollutantmean("specdata","sulfate", 1:10)
?within
pollutantmean <- function(directory, pollutant, id)  {
files_full <- list.files("specdata", full.names=TRUE)
data <- data.frame()
for (i in 1:332) {
data <- rbind(data, read.csv(files_full[i]))
}
data_subset <- data[which(data[,"ID"] %in% id),]
if(pollutant=="nitrate") {
ans <- mean(data_subset[,"nitrate"], na.rm=TRUE)
} else {
ans <-mean(data_subset[,"sulfate"], na.rm=TRUE)
}
round(ans,4)
}
pollutantmean("specdata","sulfate", 1:10)
pollutantmean("specdata","nitrate", 70:72)
?round
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
getwd
getwd()
1
submit()
1
1
1
1
submit()
submit()
submit()
submit()
submit()
?na.omit
?colSum
?colSums
?spit
?split
?c
matrix(rnorm(100),4,25)
matrix(rnorm(100)25,4)
matrix(rnorm(100),25,4)
m <- matrix(rnorm(100),25,4)
n <- 1:15
n <- 1:25
cbind(m,n)
mei <- cbind(m,n)
res <- split(mei$n)
files_full <- list.files("specdata", full.names=TRUE)
data <- data.frame()
list_comp <- na.omit(data)
nobs <- split(list_comp$ID)
nobs <- split(list_comp, ID)
submit()
files_full <- list.files("specdata", full.names=TRUE)
data <- data.frame()
for (i in 1:332) {
data <- rbind(data, read.csv(files_full[i]))
}
data
aggregate(data[,sapply(data,is.numeric)],data["ID"],sum)
files_full <- list.files("specdata", full.names=TRUE)
data <- data.frame()
for (i in 1:332) {
data <- rbind(data, read.csv(files_full[i]))
listc <- na.omit(data)
listd <- aggregate(listc[,sapply(listc,is.numeric)],listc["ID"],sum)
guai <- transform(listd, nobs = nitrate + sulfate)
guai
files_full <- list.files("specdata", full.names=TRUE)
data <- data.frame()
for (i in 1:332) {
data <- rbind(data, read.csv(files_full[i]))
listc <- na.omit(data)
listd <- aggregate(listc[,sapply(listc,is.numeric)],listc["ID"],sum)
guai <- transform(listd, nobs = nitrate + sulfate)
files_full <- list.files("specdata", full.names=TRUE)
data <- data.frame()
for (i in 1:332) {
data <- rbind(data, read.csv(files_full[i]))
}
listc <- na.omit(data)
listd <- aggregate(listc[,sapply(listc,is.numeric)],listc["ID"],sum)
guai <- transform(listd, nobs = nitrate + sulfate)
guai
swirl()
library(swirl)
swirl()
3
swirl()
exit()
exit
?nrow?
?c
complete <- function(directory, id = 1:332) {
files_full <- list.files("specdata", full.names=TRUE)
data <- data.frame()
for (i in 1:332) {
data <- rbind(data, read.csv(files_full[i]))
}
data <- ddply(data,"ID",nrow(data,na.rm=TRUE))
colnames(data) <- c("id","nobs")
finaldata <- data[id,]
finaldata
}
